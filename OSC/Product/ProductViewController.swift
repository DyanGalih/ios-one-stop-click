//
//  ProductViewController.swift
//  OSC
//
//  Created by Dyan Galih on 25/06/19.
//  Copyright (c) 2019 Dyan Galih. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Alamofire
import AlamofireImage
import UIKit

protocol ProductDisplayLogic: class
{
    func displayProductList(viewModel: Product.List.ViewModel)
    func displayNotFound(title: String, message: String)
}

class ProductViewController: UIViewController, UITableViewDataSource, UITableViewDelegate, ProductDisplayLogic
{
    var interactor: ProductBusinessLogic?
    var router: (NSObjectProtocol & ProductRoutingLogic & ProductDataPassing)?
    var productList: [Product.List.Item] = []
    var ImageCache = [String: UIImage]()
    var defaultImage: UIImage?
    
    @IBOutlet var tableProductView: UITableView!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ProductInteractor()
        let presenter = ProductPresenter()
        let router = ProductRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier
        {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector)
            {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        defaultImage = UIImage(named: "noimage")
        tableProductView.rowHeight = UITableView.automaticDimension
        tableProductView.estimatedRowHeight = UITableView.automaticDimension
        tableProductView.delegate = self
        tableProductView.allowsSelection = true
        tableProductView.isUserInteractionEnabled = true
    }
    
    override func viewWillAppear(_ animated: Bool)
    {
        doGetProductList()
    }
    
    // MARK: Do something
    
    // @IBOutlet weak var nameTextField: UITextField!
    
    func doGetProductList()
    {
        let request = Product.List.Request()
        interactor?.doGetProductList(request: request)
    }
    
    func displayProductList(viewModel: Product.List.ViewModel)
    {
        productList = viewModel.data
        tableProductView.reloadData()
    }
    
    func displayNotFound(title: String, message: String)
    {
        showAlert(title: title, message: message, handler: nil)
    }
    
    func numberOfSections(in tableView: UITableView) -> Int
    {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        return productList.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        let item = productList[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: "ProductTableViewCell") as! ProductCellTableViewCell
        
        cell.setTitle(title: item.name)
        cell.setPrice(price: item.price)
        
        let dishName = item.thumbnail
        if let dishImage = ImageCache[dishName]
        {
            cell.setImage(image: imageRatio(image: dishImage))
        }
        else
        {
            // Download image
            // We should perform this in a background thread
            Alamofire.request(Config().endpoint + item.thumbnail).validate(statusCode: 200..<300)
                .responseImage
            { response in
                if let image = response.result.value
                {
                    // Store the commit date in to our cache
                    self.ImageCache[dishName] = image
                }
                else
                {
                    self.ImageCache[dishName] = self.defaultImage
                }
                DispatchQueue.main.async
                {
                    cell.setImage(image: self.imageRatio(image: self.ImageCache[dishName]!))
                }
            }
        }
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat
    {
        return UITableView.automaticDimension
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        self.router?.routeToProductDetail(segue: nil)
    }
}
