//
//  RegisterViewController.swift
//  OSC
//
//  Created by Dyan Galih on 07/05/19.
//  Copyright (c) 2019 Dyan Galih. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RegisterDisplayLogic: class {
    func displaySuccessRegister()
    func displayRegisterFailed(title: String, message: String)
}

class RegisterViewController: UIViewController, RegisterDisplayLogic {

    var interactor: RegisterBusinessLogic?
    var router: (NSObjectProtocol & RegisterRoutingLogic & RegisterDataPassing)?
    var registerView: RegisterView!

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = RegisterInteractor()
        let presenter = RegisterPresenter()
        let router = RegisterRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    func setupView() {
        registerView = RegisterView(frame: view.frame)
        registerView.translatesAutoresizingMaskIntoConstraints = false
        view.addSubview(registerView)
        setupRegisterView()
    }

    func setupRegisterView() {
        registerView.centerXAnchor.constraint(equalTo: view.centerXAnchor).isActive = true
        registerView.centerYAnchor.constraint(equalTo: view.centerYAnchor).isActive = true
        registerView.widthAnchor.constraint(equalTo: view.widthAnchor).isActive = true
        registerView.heightAnchor.constraint(equalTo: view.heightAnchor).isActive = true
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
    }

    // MARK: Do something
    
    @objc func submitRegiserButton(_:UIButton){
        registerView.registerButton.startAnimating()
        let firstName = registerView.firstNameTextField.text!
        let lastName = registerView.lastNameTextField.text!
        let email = registerView.emailTextField.text!
        let password = registerView.passwordTextField.text!
        let reInputPassword = registerView.reinputPasswordTextField.text!
        
        let request = Register.NewUser.Request(firstname: firstName, lastname: lastName, email: email, password: password, password_confirmation: reInputPassword)
        interactor?.doRegister(request: request)
    }

    func displayRegisterFailed(title: String, message: String) {
        registerView.registerButton.stopAnimating()
        showAlert(title: title, message: message, handler: nil)
    }

    func displaySuccessRegister() {
        registerView.registerButton.stopAnimating()
        registerView.firstNameTextField.text = ""
        registerView.lastNameTextField.text = ""
        registerView.emailTextField.text = ""
        registerView.passwordTextField.text = ""
        registerView.reinputPasswordTextField.text = ""
        showAlert(title: "Registration Success", message: "Registration Success Please Login using your account", handler: routeToLogin(_:))
    }

    func routeToLogin(_: UIAlertAction) {
        router?.routeToLogin(segue: nil)
    }
}
